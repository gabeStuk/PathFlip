name: Rust

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Get Version + Set Target
      run: |
        rustup target add x86_64-pc-windows-gnu
        grep '^version' ${{github.workspace}}/Cargo.toml | awk -F\" '{print $2}' | xargs -I {} echo "version=v{}" >> $GITHUB_ENV
    - name: Build
      run: cargo build --verbose --release --target "x86_64-pc-windows-gnu"
    - name: Add artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: PathFlip-Windows
        path: ${{ github.workspace }}/target/release/fldmirr.exe
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: PathFlip-${{env.version}}
        release_name: PathFlip-${{env.version}} Release
        body: |
        draft: false
        prerelease: false
    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_name: PathFlip.exe
        asset_path: ${{ github.workspace }}/target/release/fldmirr.exe
        asset_content_type: application/vnd.microsoft.portable-executable